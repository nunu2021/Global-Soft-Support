<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Chat App</title>
    <script>
        const roomName = "<%= roomName %>"
    </script>
    <script defer src="https://global-soft-support.herokuapp.com/socket.io/socket.io.js"></script>
    <script defer >

        const socket = io('https://global-soft-support.herokuapp.com/')
        const messageContainer = document.getElementById('message-container')
        const roomContainer = document.getElementById('room-container')
        const messageForm = document.getElementById('send-container')
        const messageInput = document.getElementById('message-input')
        alert("script is working, I am stoopid");
        if (messageForm != null) {
            const name = prompt('What is your name?')
            appendMessage('You joined')
            socket.emit('new-user', roomName, name)

            messageForm.addEventListener('submit', e => {
                e.preventDefault()
                const message = messageInput.value
                appendMessage(`You: ${message}`)
                socket.emit('send-chat-message', roomName, message)
                messageInput.value = ''
            })
        }

        socket.on('room-created', room => {
            const roomElement = document.createElement('div')
            roomElement.innerText = room
            const roomLink = document.createElement('a')
            roomLink.href = `/${room}`
            roomLink.innerText = 'join'
            roomContainer.append(roomElement)
            roomContainer.append(roomLink)
        })

        socket.on('chat-message', data => {
            appendMessage(`${data.name}: ${data.message}`)
        })

        socket.on('user-connected', name => {
            appendMessage(`${name} connected`)
        })

        socket.on('user-disconnected', name => {
            appendMessage(`${name} disconnected`)
        })

        function appendMessage(message) {
            const messageElement = document.createElement('div')
            messageElement.innerText = message
            messageContainer.append(messageElement)
        }


    </script>
    <style>

        form {
            background-color: #bacec1;
        }
        body {
            padding: 0;
            padding-top: 30px;
            background-color: #bacec1;
            margin: 0;
            display: flex;
            justify-content: center;
        }
        #message-container {
            width: 100%;
            max-width: 300px;

        }
        #message-container div {
            background-color: #f6f4e8;
            padding: 5px;
            margin-bottom: 5px;
            word-wrap:break-word;
            border-radius: 5px;
        }
        #message-container div:nth-child(2n) {
            background-color: #FFF;
        }
        #send-container {
            position: fixed;
            padding-bottom: 30px;
            bottom: 0;
            background-color: #bacec1;

            height: 10%;
            max-height: 30px;
            width: 100%;
            max-width: 300px;
            display: flex;

        }
        #message-input {
            border-radius: 5px;
            flex-grow: 1;
        }
    </style>
</head>
<body>
<div id="message-container"></div>
<form id="send-container">
    <input type="text" id="message-input">
    <button type="submit" id="send-button" style="background-color:transparent; border-color:transparent;"><img src="https://www.searchpng.com/wp-content/uploads/2019/02/Send-Icon-PNG-1.png" height="30" width="30"></button>
</form>

</body>

</html>
